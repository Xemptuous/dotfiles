# vim:set ft=sh
# MODULES
# The following modules are loaded before any boot hooks are
# run.  Advanced users may wish to specify all system modules
# in this array.  For instance:
#     MODULES=(usbhid xhci_hcd)
# MODULES=(r8169)

MODULES=(r8169 ext4 vfat nvme nvme_core hid_generic ohci_pci usbhid)

# MODULES=(acpi_pad video snd_usb_audio snd_usbmidi_lib uvcvideo xhci_pci xhci_pci_renesas nvme bluetooth btbcm btintel btmtk btrtl btusb acpi_cpufreq aesni_intel ccp crc32_pclmul crc32c_intel crct10dif_pclmul cryptd crypto_simd gf128mul ghash_clmulni_intel libarc4 polyval_clmulni polyval_generic sha1_ssse3 sha256_ssse3 sha512_ssse3 amdgpu amdxcp drm_buddy drm_display_helper drm_exec drm_suballoc_helper drm_ttm_helper gpu_sched ttm amd64_edac rapl k10temp spd5118 i2c_algo_bit i2c_piix4 i2c_smbus joydev mousedev hid_generic usbhid mac_hid kvm kvm_amd cec mc uvc uvcvideo videobuf2_common videobuf2_memops videobuf2_v4l2 videobuf2_vmalloc videodev bluetooth cfg80211 fjes libphy mac80211 mdio_devres mt76 mt76_connac_lib mt7921_common mt7921e mt792x_lib r8169 rfkill nvme_core msi_ec wmi wmi_bmof intel_rapl_common intel_rapl_msr pcspkr snd snd_hda_codec snd_hda_codec_generic snd_hda_codec_hdmi snd_hda_codec_realtek snd_hda_core snd_hda_intel snd_hda_scodec_component snd_hwdep snd_intel_dspcfg snd_intel_sdw_acpi snd_pcm snd_rawmidi snd_seq_device snd_timer snd_ump snd_usb_audio snd_usbmidi_lib soundcore sp5100_tco amd_atl crc16 fmpm gpio_amdpt gpio_generic)

# BINARIES
# This setting includes any additional binaries a given user may
# wish into the CPIO image.  This is run last, so it may be used to
# override the actual binaries included by a given hook
# BINARIES are dependency parsed, so you may safely ignore libraries
BINARIES=()
#BINARIES=(fsck fsck.ext4 e2fsck)

# FILES
# This setting is similar to BINARIES above, however, files are added
# as-is and are not parsed in any way.  This is useful for config files.
FILES=()

# HOOKS
# This is the most important setting in this file.  The HOOKS control the
# modules and scripts added to the image, and what happens at boot time.
# Order is important, and it is recommended that you do not change the
# order in which HOOKS are added.  Run 'mkinitcpio -H <hook name>' for
# help on a given hook.
# 'base' is _required_ unless you know precisely what you are doing.
# 'udev' is _required_ in order to automatically load modules
# 'filesystems' is _required_ unless you specify your fs modules in MODULES
# Examples:
##   This setup specifies all modules in the MODULES setting above.
##   No RAID, lvm2, or encrypted root is needed.
#    HOOKS=(base)
#
##   This setup will autodetect all modules for your system and should
##   work as a sane default
#    HOOKS=(base udev autodetect modconf block filesystems fsck)
#
##   This setup will generate a 'full' image which supports most systems.
##   No autodetection is done.
#    HOOKS=(base udev modconf block filesystems fsck)
#
##   This setup assembles a mdadm array with an encrypted root file system.
##   Note: See 'mkinitcpio -H mdadm_udev' for more information on RAID devices.
#    HOOKS=(base udev modconf keyboard keymap consolefont block mdadm_udev encrypt filesystems fsck)
#
##   This setup loads an lvm2 volume group.
#    HOOKS=(base udev modconf block lvm2 filesystems fsck)
#
##   This will create a systemd based initramfs which loads an encrypted root filesystem.
#    HOOKS=(base systemd autodetect modconf kms keyboard sd-vconsole sd-encrypt block filesystems fsck)
#
##   NOTE: If you have /usr on a separate partition, you MUST include the
#    usr and fsck hooks.
# HOOKS=(base udev autodetect microcode modconf kms keyboard keymap consolefont block filesystems fsck)
HOOKS=(systemd autodetect microcode modconf kms keyboard keymap consolefont block filesystems fsck)

# COMPRESSION
# Use this to compress the initramfs image. By default, zstd compression
# is used for Linux â‰¥ 5.9 and gzip compression is used for Linux < 5.9.
# Use 'cat' to create an uncompressed image.
#COMPRESSION="zstd"
#COMPRESSION="gzip"
#COMPRESSION="bzip2"
#COMPRESSION="lzma"
#COMPRESSION="xz"
#COMPRESSION="lzop"
#COMPRESSION="lz4"

# COMPRESSION_OPTIONS
# Additional options for the compressor
#COMPRESSION_OPTIONS=()

# MODULES_DECOMPRESS
# Decompress loadable kernel modules and their firmware during initramfs
# creation. Switch (yes/no).
# Enable to allow further decreasing image size when using high compression
# (e.g. xz -9e or zstd --long --ultra -22) at the expense of increased RAM usage
# at early boot.
# Note that any compressed files will be placed in the uncompressed early CPIO
# to avoid double compression.
#MODULES_DECOMPRESS="no"
